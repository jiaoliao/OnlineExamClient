/**
 *
 * @author Yao
 */

import java.util.Arrays;
import java.util.List;
import java.util.Locale;
import javafx.scene.control.Label;
import javafx.scene.input.MouseEvent;
import javafx.stage.Popup;
import javax.tools.Diagnostic;
import javax.tools.DiagnosticCollector;
import javax.tools.JavaCompiler;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;
import org.fxmisc.richtext.CodeArea;

public class ErrorTip{
  private Popup popup;
  private Label tipLabel;
  
  /**
   * 
   * @param fileName_ 欲編譯的檔案名稱
   * @return 編譯錯誤訊息，為List<Diagnostic>型態
   */
  public List<Diagnostic> compile2GetErrorMsg(String fileName_) {
    JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
    DiagnosticCollector diagnosticsCollector = new DiagnosticCollector();
    StandardJavaFileManager fileManager  = compiler.getStandardFileManager(diagnosticsCollector, null, null); 
    String fileToCompile = fileName_ + ".java"; 
    Iterable fileObjects = fileManager.getJavaFileObjectsFromStrings(Arrays.asList(fileToCompile)); 
    JavaCompiler.CompilationTask task = compiler.getTask(null, fileManager, diagnosticsCollector, null, null, fileObjects);
    List<Diagnostic> diagnostics = diagnosticsCollector.getDiagnostics();
    
    return diagnostics;
  }
  
  /**
   * 
   * @param ca 滑鼠動作所執行區域
   * @param lineNumber 錯誤訊息行號
   * @param errorMsg 錯誤訊息
   * 
   */
  public void setErrorTip(CodeArea ca, int lineNumber, String errorMsg){
    popup = new Popup();
    tipLabel = new Label();
    tipLabel.setStyle("-fx-background-color: black; -fx-text-fill: white; -fx-padding: 5;");
    popup.getContent().add(tipLabel);

    try{
      ca.addEventHandler(MouseEvent.MOUSE_CLICKED, e -> {
        if (ca.getCurrentParagraph() + 1 == lineNumber) {
          ca.lookup(ca.getSelectedText()).setStyle("-fx-underline: true;");
          tipLabel.setText("Line Number: " + lineNumber + "\n------------\n" + "Message: " + errorMsg);
          popup.show(ca, e.getScreenX(), e.getScreenY() + 10);
        }else {
          popup.hide();
        }
      });
    } catch(Exception e) {
      e.printStackTrace();
    }
  }
      
  /**
   * 
   * @param ca 滑鼠動作所執行區域
   * @param errors 利用JavaCompiler、DiagnosticsCollector所取得的錯誤訊息，
                   亦為compile2GetErrorMsg(String fileName_)所取得的值
   */
  public void setErrorTip(CodeArea ca, List<Diagnostic> errors){
    popup = new Popup();
    tipLabel = new Label();
    tipLabel.setStyle("-fx-background-color: black; -fx-text-fill: white; -fx-padding: 5;");

    popup.getContent().add(tipLabel);

    try{
      ca.addEventHandler(MouseEvent.MOUSE_CLICKED, e -> {                
      for(Diagnostic diagnostic : errors){
        if (ca.getCurrentParagraph() + 1 == (int)diagnostic.getLineNumber()) {
          tipLabel.setText("Line Number: " + (int)diagnostic.getLineNumber() + "\n------------\n" + "Message: " + diagnostic.getMessage(Locale.ENGLISH));
          popup.show(ca, e.getScreenX(), e.getScreenY() + 10);
        }
      }
    });
    } catch(Exception e) {
      e.printStackTrace();
    }
  }
}
